package businesslogic.inventory;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;

import businesslogicservice.inventoryblservice.InventoryBLService;
import dataservice.basedataservice.BaseDataService;
import dataservice.inventorydataservice.InventoryDataService;
import po.receiptpo.AdjustReceiptPO;
import po.receiptpo.InventoryExportReceiptPO;
import po.receiptpo.InventoryImportReceiptPO;
import state.ResultMessage;
import vo.InventoryCheckVO;
import vo.InventoryViewVO;
import vo.receiptvo.InventoryExportReceiptVO;
import vo.receiptvo.InventoryImportReceiptVO;
import vo.receiptvo.TransferArrivalListVO;

public class Inventory implements InventoryBLService {
	private InventoryDataService inventoryData;
	public Inventory() {
		try {
			inventoryData= (InventoryDataService)Naming.lookup("rmi://" + "127.0.0.1" + ":" + "8888" + "/"+InventoryDataService.NAME);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}
	}
	@Override
	public InventoryViewVO viewInventory(String beginDate, String endDate) throws RemoteException  {
		
			InventoryViewVO viewVO=new InventoryViewVO (inventoryData.getimportNumber(), inventoryData.getexportNumber(), inventoryData.getNum());
		    return viewVO;
		
	}

	@Override
	public InventoryCheckVO checkRecord() throws RemoteException {
		ArrayList<InventoryImportReceiptPO> POs=inventoryData.showImport();
		ArrayList<InventoryImportReceiptVO> VOs = new ArrayList<InventoryImportReceiptVO>();
		//记得补充一个生成方法
		String lotNum = null;
		for(InventoryImportReceiptPO po : POs) {
			InventoryImportReceiptVO vo = POtoVO(po);
			VOs.add(vo);
		}
		InventoryCheckVO checkVO=new InventoryCheckVO(VOs,lotNum);
		return checkVO;
	}

	private InventoryImportReceiptVO POtoVO(InventoryImportReceiptPO po) throws RemoteException {
		InventoryImportReceiptVO vo = new InventoryImportReceiptVO(po.getCommoditiesID(),po.getDestination(),po.getA(),po.getB(),po.getC(),po.getD());
		return vo;
	}
	
	@Override
	public String getImportID() throws RemoteException {
		// TODO Auto-generated method stub
		String ID=inventoryData.getImportID();
		return ID;
	}

	@Override
	public ResultMessage addCommodities(TransferArrivalListVO receipt) {
		、
		return null;
	}

	@Override
	public InventoryImportReceiptPO buildImport() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResultMessage submitImport(InventoryImportReceiptVO importReceipt) {
		// TODO Auto-generated method stub
		return ResultMessage.SUCCESS;
	}

	@Override
	public String getExportID() throws RemoteException {
		String ID=inventoryData.getExportID();
		return ID;
	}

	@Override
	public ResultMessage minusCommodities(TransferArrivalListVO receipt) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public InventoryExportReceiptPO buildExport() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResultMessage submitExport(InventoryExportReceiptVO exportReceipt) {
		// TODO Auto-generated method stub
		return ResultMessage.SUCCESS;
	}

	@Override
	public String getAdjustID() throws RemoteException {
		String ID=inventoryData.getImportID();
		return ID;
	}

	@Override
	public AdjustReceiptPO adjust() {
		// TODO Auto-generated method stub
		return null;
	}

}
