package businesslogic.fundbl;
/**
 * @author LIUXUANLIN
 */
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;

import businesslogicservice.fundblservice.ExpenseBLService;
import dataservice.funddataservice.ExpenseDataService;
import po.ExpensePO;
import state.ConfirmState;
import state.ResultMessage;
import vo.ExpenseVO;

public class Expense {

	private ExpenseDataService expenseData;
	public Expense() {
		try {
			expenseData = (ExpenseDataService)Naming.lookup("rmi://" + "127.0.0.1" + ":" + "8888" + "/"+ExpenseDataService.NAME);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}
	}
	
	public ConfirmState confirmOperation() {
		// TODO Auto-generated method stub
		return ConfirmState.CONFIRM;
	}

	
	public String getID() throws RemoteException {
		// TODO Auto-generated method stub
		return expenseData.getID();
	}

	
	public ArrayList<ExpenseVO> show() throws RemoteException {
		ArrayList<ExpensePO> pos=expenseData.show();
		ArrayList<ExpenseVO> vos=new ArrayList<ExpenseVO>();
		for(ExpensePO po :pos){
			ExpenseVO vo=poTOvo(po);
			vos.add(vo);
		}
		return vos;
	}
	
    public ExpenseVO poTOvo(ExpensePO po){
	    ExpenseVO vo=new ExpenseVO(po.getID(),po.getWorkshop(),po.getMoney(),po.getAddress());
    	return vo;
 	
    }
	
	public ResultMessage add(ExpenseVO vo) {
		ExpensePO expensePO = new ExpensePO(vo.getID(), vo.getWorkshop(), vo.getMoney(), vo.getAddress());
		try {
			return expenseData.add(expensePO);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		return ResultMessage.FAIL;
	}

	
	public ResultMessage delete(String ID) {
		try {
			return expenseData.delete(ID);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		return ResultMessage.FAIL;
	}

	
	public ResultMessage update(ExpenseVO vo) {
		ExpensePO expensePO = new ExpensePO(vo.getID(), vo.getWorkshop(), vo.getMoney(), vo.getAddress());
		try {
			return expenseData.modify(expensePO);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		return ResultMessage.FAIL;
	}

}
