package businesslogic.record;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;

import businesslogicservice.recordblservice.RecordBLService;
import dataservice.funddataservice.DebitAndPayBillDataService;
import dataservice.recorddataservice.RecordDataService;
import po.BussinessProcessPO;
import po.DebitAndPayBillPO;
import po.receiptpo.DebitBillPO;
import po.receiptpo.PaymentBillPO;
import vo.BussinessConditionVO;
import vo.BussinessProcessVO;
import vo.DebitAndPayBillVO;
import vo.receiptvo.DebitBillVO;
import vo.receiptvo.PaymentBillVO;

public class record implements RecordBLService{
	private RecordDataService recordData;
	private  DebitAndPayBillDataService  DebitAndPayBillData;
	public record() {
		try {
			recordData= (RecordDataService)Naming.lookup("rmi://" + "127.0.0.1" + ":" + "8888" + "/"+RecordDataService.NAME);
			DebitAndPayBillData = (DebitAndPayBillDataService)Naming.lookup("rmi://" + "127.0.0.1" + ":" + "8888" + "/"+ RecordDataService.NAME);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}
	}
	@Override
	public BussinessProcessVO bussinessProcess(String begin, String end) {
		BussinessProcessPO vo=DebitAndPayBillData.showList(begin,end);
		return vo;
	}
   
	@Override
	public BussinessConditionVO bussinessCondition(String end) {
		BussinessConditionVO vo=recordData.getBusinessCondition(end);
		return vo;
	}
   
   public DebitAndPayBillVO poTOvo(DebitAndPayBillPO po){
	   DebitAndPayBillVO vo=new DebitAndPayBillVO(po.getID(),po.getMoney(),po.getCourierID(),po.getType(),po.getOrderNumbers());
	  
	return vo;
   }
    
	@Override
	public double income(String end) {
		BussinessConditionVO vo=recordData.getBusinessCondition(end);
		return 0;
	}

	@Override
	public double earning(String end) {
		BussinessConditionVO vo=recordData.getBusinessCondition(end);
		return 0;
	}

	@Override
	public double expense(String end) {
		BussinessConditionVO vo=recordData.getBusinessCondition(end);
		return 0;
	}

}
